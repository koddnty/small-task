#define _CRT_SECURE_NO_WARNINGS 1

#include <stdio.h>
#include <math.h>

/*水仙花数*/
//int main() {
//	for (int i = 100; i <= 999; i++) {
//		int a = 0;
//		int aa = 0;
//		int b = 0;
//		int c = 0;
//		a = i / 100;//百位数
//		aa = i % 100;
//		b = aa / 10;//十分位
//		c = i % 10;//个位
//		int total = (a * a * a) + (b * b * b) + (c * c * c);
//		if (total == i) {
//			printf("%d\n", i);
//		}
//	}
//}

/*a+aa+aaa... 的和*/
//int main() {
//	int a = 0;
//	int b = 0;
//	int number = a;
//	int sum = 0;
//	scanf("%d %d", &a,&b);
//	for (int i = 0; i < b; i++) {
//		//number = a;
//		//for (int i_2 = i ; i_2 > 0; i_2--){
//		number = a + (number * 10/*pow(10, i_2)*/);
//
//
//		sum = number + sum;
//	}
//	printf("%d\n", sum);
//	return 0;
//}

/*兔子数列*/
//int main() {
//	int n = 0;
//	int a1 = 1;
//	int a2 = 1;
//	int a3 = 1;
//	scanf("%d", &n);
//	for (int i = 3; i <= n; i++) {
//		a3 = a1 + a2;
//		a1 = a2;
//		a2 = a3;
//		printf("第(%d)个月的兔子数为：(%d)\n", n, a3);
//	}
//
//	return 0;
//}

/*n的阶乘*/
//int main() {
//	int n = 0;
//	int sum = 1;
//	scanf("%d", &n);
//	if (n >= 0) {
//		for (int i = n; i >=1; i--)
//		{
//			sum = sum * i;
//		}
//		printf("%d\n", sum);
//	}
//	return 0;
//}

/*1到n的阶乘的和*/
//int main() {
//	int n = 0;
//	int num = 1;
//	int sum = 0;
//	scanf("%d", &n);
//	for (int i = 1 ; i <= n; i++) 
//	{
//		num = num * i;
//		sum = num + sum;
//	}
//	printf("%d", sum);
//	return 0;
//}

/*查找数据*/
/*001*/
//int main() {
//	int num;
//	scanf("%d", &num);
//	int arr[] = { 1, 3 , 5 , 7 , 9 , 11 };
//	int n = 5 / 2;
//	for (; ;) {
//		if (arr[n] == num)
//		{
//			printf("该数字的序号为%d\n", n);
//			break;
//		}
//		else if (arr[n] > num )
//		{
//			n = n / 2;
//			continue;
//		}
//		else if (arr[5] == num)
//		{
//			printf("该数字的序号为%d\n", 5);
//			break;
//		}
//		else
//		{
//			n = (n + 5) / 2;
//		}
//	}
//	return 0;
//}

/*002*///最终版：）
//int main() {
//	int n;
//	scanf("%d", &n);
//	int ppt[] = { 1, 3, 5, 7, 9, 11, 13, 15, 17, 19 };
//	int left = 0;
//	int right = 9;
//	int mid = (left + right) / 2;
//	while (1)
//	{
//		if (ppt[mid] == n)
//		{
//			printf("%d\n", mid);
//			break;
//		}
//		else if (ppt[mid] > n)
//		{
//			right = mid - 1;
//			mid = (left + right) / 2;
//		}
//		else if (ppt[mid] <  n)
//		{
//			left = mid + 1;
//			mid = (left + right) / 2;
//		}
//	}
//	return 0;
//}

/**/
